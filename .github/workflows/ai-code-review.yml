name: AI Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main]

permissions:
  contents: read
  pull-requests: write
  issues: write
  checks: write
  security-events: write

jobs:
  # 1. GitHub Copilot Review
  copilot-review:
    runs-on: ubuntu-latest
    name: GitHub Copilot Analysis
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Copilot for PRs
        uses: copilot-for-prs/copilot-for-prs@v1
        with:
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_pr_id: ${{ github.event.pull_request.number }}

  # 2. Google Gemini Code Assist
  gemini-review:
    runs-on: ubuntu-latest
    name: Gemini Code Analysis
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install Dependencies
        run: |
          pip install google-generativeai requests gitpython
      
      - name: Gemini Code Review
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          python .github/scripts/gemini-review.py

  # 3. Security Scanning with GitHub CodeQL (Free)
  security-scan:
    runs-on: ubuntu-latest
    name: Security Analysis
    strategy:
      matrix:
        language: ['python', 'javascript-typescript']
    steps:
      - uses: actions/checkout@v4
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
      
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
      
      - name: CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  # 4. Basic Linting (Free)
  lint-check:
    runs-on: ubuntu-latest
    name: Code Quality Check
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Python Linting
        run: |
          pip install ruff black pylint
          ruff check . || true
          black --check . || true
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: JavaScript/TypeScript Linting
        run: |
          cd apps/web
          npm install
          npm run lint || true

  # Summary Report
  summary:
    needs: [copilot-review, gemini-review, security-scan, lint-check]
    runs-on: ubuntu-latest
    name: Review Summary
    if: always()
    steps:
      - name: Create Summary
        run: |
          echo "# ðŸ¤– AI Code Review Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## âœ… Analysis Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Tool | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| GitHub Copilot | âœ… AI Review |" >> $GITHUB_STEP_SUMMARY
          echo "| Google Gemini | âœ… Code Analysis |" >> $GITHUB_STEP_SUMMARY
          echo "| CodeQL | âœ… Security Scan |" >> $GITHUB_STEP_SUMMARY
          echo "| Linting | âœ… Code Quality |" >> $GITHUB_STEP_SUMMARY